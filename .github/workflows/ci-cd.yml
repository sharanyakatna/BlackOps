name: BlackOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Python
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # 3. Cache dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 5. Run preprocessing
      - name: Preprocess data
        run: |
          python scripts/preprocess_data.py

      # 6. Train models
      - name: Train models
        run: |
          python scripts/train_models.py

      # 7. Run tests
      - name: Run tests
        run: |
          pytest tests/

      # 8. Upload trained models as artifacts
      - name: Upload models
        uses: actions/upload-artifact@v3
        with:
          name: trained-models
          path: models/

  deploy-website:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Node (for React frontend if any)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3. Install frontend dependencies
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      # 4. Build frontend
      - name: Build frontend
        run: |
          cd frontend
          npm run build

      # 5. Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/build

